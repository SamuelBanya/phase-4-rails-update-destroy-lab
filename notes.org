* Notes
I ran the following commands to set this lab up:
#+begin_src bash
npm install --prefix client
bundle install
rails db:migrate db:seed
#+end_src

I started the backend with the 'rails s' command:
#+begin_src bash
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-rails-update-dest=> Booting Puma
=> Rails 6.1.3.2 application starting in development
=> Run `bin/rails server --help` for more startup options
Puma starting in single mode...
* Puma version: 5.3.1 (ruby 2.7.4-p191) ("Sweetnighter")
*  Min threads: 5
*  Max threads: 5
*  Environment: development
*          PID: 9005
* Listening on http://127.0.0.1:3000
* Listening on http://[::1]:3000
Use Ctrl-C to stop
#+end_src

I started the frontend with the 'npm start --prefix client' command.

I then revised the 'app/controllers/plants_controller.rb' controller file with the following revision to include the 'update' method aka 'PATCH' request for the required portion of the lab assignment:
#+begin_src ruby
class PlantsController < ApplicationController

  # GET /plants
  def index
    plants = Plant.all
    render json: plants
  end

  # GET /plants/:id
  def show
    plant = Plant.find_by(id: params[:id])
    render json: plant
  end

  # POST /plants
  def create
    plant = Plant.create(plant_params)
    render json: plant, status: :created
  end

  # PATCH /plants/:id
  def update
    plant = Plant.find_by(id: params[:id])
    plant.update(plant_params)
    render json: plant
  end

  private

  def plant_params
    params.permit(:name, :image, :price, :is_in_stock)
  end
end
#+end_src

I then revised the 'app/controllers/plants_controller.rb' controller file to include the 'destroy' method aka 'DELETE' request based method:
#+begin_src ruby
class PlantsController < ApplicationController

  # GET /plants
  def index
    plants = Plant.all
    render json: plants
  end

  # GET /plants/:id
  def show
    plant = Plant.find_by(id: params[:id])
    render json: plant
  end

  # POST /plants
  def create
    plant = Plant.create(plant_params)
    render json: plant, status: :created
  end

  # PATCH /plants/:id
  def update
    plant = Plant.find_by(id: params[:id])
    plant.update(plant_params)
    render json: plant
  end

  # DELETE /plants/:id
  def destroy
    plant = Plant.find_by(id: params[:id])
    plant.destroy()
    head :no_content
  end

  private

  def plant_params
    params.permit(:name, :image, :price, :is_in_stock)
  end
end
#+end_src

I then revised the 'config/routes.rb' routes file to also include the ':update' and ':destroy' actions that I mentioned within the 'app/controllers/plants_controller.rb' controller file:
#+begin_src ruby
Rails.application.routes.draw do
  resources :plants
end
#+end_src
